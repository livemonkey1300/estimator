# Generated by Django 2.1.5 on 2019-03-21 14:20

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='EXCHANGE',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exchange_name', models.CharField(default='', max_length=255)),
                ('business_type', models.CharField(choices=[('Automotive', 'Automotive'), ('Corporate', 'Corporate'), ('Education', 'Education'), ('Healthcare', 'Healthcare'), ('Hospitality', 'Hospitality'), ('Manufacturing', 'Manufacturing'), ('Technology', 'Technology')], default='Automotive', max_length=255)),
                ('business_name', models.CharField(blank=True, default='Business Name', max_length=255, null=True, verbose_name='Business Name')),
                ('mailbox', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(1000)], verbose_name='MailBox')),
                ('office_license', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(1000)], verbose_name='Office License')),
                ('current_email_provider', models.CharField(blank=True, default='Current Email Provider', max_length=255, null=True, verbose_name='Current Email Provider')),
                ('number_of_employees', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(2000)], verbose_name='Number of employees')),
                ('average_size_of_mailbox', models.CharField(choices=[('5 GB', '5 GB'), ('10 GB', '10 GB'), ('25 GB', '25 GB'), ('50 GB', '50 GB'), ('75 GB', '75 GB')], default='5 GB', max_length=255)),
                ('migration_required', models.CharField(choices=[('No', 'No'), ('Yes', 'Yes')], default='No', max_length=255)),
            ],
            options={
                'verbose_name': 'Exchange',
            },
        ),
        migrations.CreateModel(
            name='TIME_MANAGEMENT',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_management_name', models.CharField(default='', max_length=255)),
                ('scheduled_date', models.DateField(blank=True, max_length=255, null=True, verbose_name='Scheduled date')),
                ('time_scheduled', models.TimeField(blank=True, max_length=255, null=True, verbose_name='Time Scheduled')),
                ('subject', models.CharField(blank=True, default='Subject', max_length=255, null=True, verbose_name='Subject')),
                ('description', models.CharField(blank=True, default='Description', max_length=255, null=True, verbose_name='Description')),
                ('creator', models.CharField(blank=True, default='creator', max_length=255, null=True, verbose_name='creator')),
            ],
            options={
                'verbose_name': 'Time Management',
            },
        ),
        migrations.CreateModel(
            name='VIRTUAL_MACHINE',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('virtual_machine_name', models.CharField(default='', max_length=255)),
                ('datacenter', models.CharField(choices=[('Brasilia, Brasil', 'Brasilia, Brasil'), ('Canada/Eastern', 'Canada/Eastern'), ('Los Angeles, CA', 'Los Angeles, CA'), ('Mexico City, MX', 'Mexico City, MX'), ('Miami, FL', 'Miami, FL'), ('Ottawa, ON', 'Ottawa, ON'), ('Paris, France', 'Paris, France'), ('Vancouver, BC', 'Vancouver, BC')], default='Brasilia, Brasil', max_length=255)),
                ('operating_system', models.CharField(choices=[('Debian', 'Debian'), ('Ubuntu', 'Ubuntu'), ('OpenSUSE', 'OpenSUSE'), ('CentOS', 'CentOS'), ('SUSE Linux', 'SUSE Linux'), ('Windows Server', 'Windows Server')], default='Debian', max_length=255)),
                ('system_disk', models.CharField(choices=[('SSD ENT Disk', 'SSD ENT Disk'), ('HDD SAS Disk', 'HDD SAS Disk')], default='SSD ENT Disk', max_length=255)),
                ('data_disk', models.CharField(choices=[('SSD ENT Disk', 'SSD ENT Disk'), ('HDD SAS Disk', 'HDD SAS Disk')], default='SSD ENT Disk', max_length=255)),
                ('network_throughput', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(1000)], verbose_name='Network Throughput')),
                ('memory', models.CharField(choices=[('2 GB', '2 GB'), ('4 GB', '4 GB'), ('6 GB', '6 GB'), ('8 GB', '8 GB'), ('10 GB', '10 GB'), ('12 GB', '12 GB'), ('14 GB', '14 GB'), ('16 GB', '16 GB'), ('18 GB', '18 GB'), ('20 GB', '20 GB'), ('22 GB', '22 GB'), ('24 GB', '24 GB'), ('26 GB', '26 GB'), ('28 GB', '28 GB'), ('30 GB', '30 GB'), ('32 GB', '32 GB')], default='2 GB', max_length=255)),
                ('vcpu', models.CharField(choices=[('2 vCPU', '2 vCPU'), ('4 vCPU', '4 vCPU'), ('6 vCPU', '6 vCPU')], default='2 vCPU', max_length=255)),
                ('quickbooks', models.BooleanField(default=False, verbose_name='Quickbooks 2019')),
                ('sage', models.BooleanField(default=False, verbose_name='Sage 2019')),
                ('sapbusinessone', models.BooleanField(default=False, verbose_name='SAP Business One')),
                ('webrootsecurityendpoint', models.BooleanField(default=False, verbose_name='Webroot Security Endpoint')),
                ('cylanceaiendpointprotection', models.BooleanField(default=False, verbose_name='Cylance AI+ Endpoint Protection')),
                ('officestandard', models.BooleanField(default=False, verbose_name='Office 2016 Standard')),
                ('businesshoursmfest', models.BooleanField(default=False, verbose_name='Business Hours M-F EST')),
                ('monsunest', models.BooleanField(default=False, verbose_name='7-24 Mon-Sun EST')),
            ],
            options={
                'verbose_name': 'Virtual Machine',
            },
        ),
        migrations.CreateModel(
            name='VOIP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('voip_name', models.CharField(default='', max_length=255)),
                ('business_type', models.CharField(choices=[('Automotive', 'Automotive'), ('Corporate', 'Corporate'), ('Education', 'Education'), ('Healthcare', 'Healthcare'), ('Hospitality', 'Hospitality'), ('Manufacturing', 'Manufacturing'), ('Technology', 'Technology')], default='Automotive', max_length=255)),
                ('business_name', models.CharField(blank=True, default='Business Name', max_length=255, null=True, verbose_name='Business Name')),
                ('extension', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(1000)], verbose_name='Extension')),
                ('locations', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)], verbose_name='Locations')),
                ('did_existing_local_number', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(50)], verbose_name='DiD Existing Local Number')),
                ('did_new_local_number', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(50)], verbose_name='DiD New Local Number')),
                ('fax_numbers', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)], verbose_name='Fax Numbers')),
                ('current_phone_provider', models.CharField(blank=True, default='Current phone provider', max_length=255, null=True, verbose_name='Current phone provider')),
                ('number_of_employees', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(2000)], verbose_name='Number of employees')),
                ('tfs_existing_toll_free_numbers', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(50)], verbose_name='TFs Existing Toll-Free Numbers')),
                ('tfs_new_toll_free_numbers', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(50)], verbose_name='TFs New Toll-Free Numbers')),
            ],
            options={
                'verbose_name': 'VOIP',
            },
        ),
    ]
